ACCOUNTS_ENABLED ?= 

-include artifacts/Makefile.env

# Define a macro (`child`) for a child init & provisioner
define child =

## Validate the child configuration exists
$(1)/validate:
	@[ -f "$$(CONFIGS)/$(1).tfvars" ] || (echo "$$(CONFIGS)/$(1).tfvars does not exist"; exit 1)

## Initialize the "$(1)" AWS account
$(1)/init:
	terraform init -from-module=modules/child accounts/$(1)
	terraform apply \
	  -var-file=artifacts/aws.tfvars \
	  -var-file=artifacts/accounts.tfvars \
	  -var-file=$$(CONFIGS)/root.tfvars \
	  -var-file=$$(CONFIGS)/$(1).tfvars \
	  -auto-approve \
	  accounts/$(1)

## Start a shell in the "$(1)" container (depends on root/init)
$(1)/shell:
	$$(DOCKER_RUN) -v $(HOME):/localhost $(1) -l

## Provision resources in the "child" account
$(1)/provision:
	$$(DOCKER_RUN) $(1) -l -c /scripts/init-child.sh

## Initialize all the $(1) AWS subaccounts (depends on init/root)
$(1): $(1)/init $(1)/provision
	@exit 0
endef

ifneq ($(ACCOUNTS_ENABLED),)
# Render the macro for each account
$(foreach account, $(ACCOUNTS_ENABLED), $(eval $(call child,$(account))))
endif

## Provision all child accounts
children: children/validate $(ACCOUNTS_ENABLED))
	@exit 0

## Validate configurations exist for all child accounts
children/validate: $(addsuffix /validate,$(ACCOUNTS_ENABLED)))
	@exit 0
